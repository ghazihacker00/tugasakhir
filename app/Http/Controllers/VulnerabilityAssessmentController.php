<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\VulnerabilityAssessmentRequest;
use Illuminate\Support\Str;

class VulnerabilityAssessmentController extends Controller
{
    public function create()
    {
        return view('vulnerability-assessment.create');
    }

    public function store(Request $request)
    {
        // Validasi input
        $request->validate([
            'nama_lengkap' => 'required|string|max:255',
            'nik_nip' => 'required|string|max:255',
            'jabatan' => 'required|string|max:255',
            'pangkat_golongan_eselon' => 'required|string|max:255',
            'dinas_unit_kerja' => 'required|string|max:255',
            'instansi' => 'required|string|max:255',
            'email_pemohon' => 'required|email|max:255',
            'telepon' => 'required|string|max:255',
            'nama_aplikasi' => 'required|string|max:255',
            'url_aplikasi' => 'required|url',
            'penetration_test_ke' => 'required|integer',
            'lampiran' => 'nullable|file|mimes:pdf,jpg,png,jpeg,docx,doc|max:2048',
        ]);

        // Menyimpan file lampiran
        $lampiranPath = $request->file('lampiran') ? $request->file('lampiran')->storeAs(
            'lampiran',
            $request->file('lampiran')->getClientOriginalName(),
            'public'
        ) : null;

        // Membuat kode tiket
        $kodeTiket = 'B-' . Str::random(4) . '-' . Str::random(4) . '-' . Str::random(4);

        // Menyimpan data ke database
        VulnerabilityAssessmentRequest::create([
            'kode_tiket' => $kodeTiket,
            'nama_lengkap' => $request->nama_lengkap,
            'nik_nip' => $request->nik_nip,
            'jabatan' => $request->jabatan,
            'pangkat_golongan_eselon' => $request->pangkat_golongan_eselon,
            'dinas_unit_kerja' => $request->dinas_unit_kerja,
            'instansi' => $request->instansi,
            'email_pemohon' => $request->email_pemohon,
            'telepon' => $request->telepon,
            'nama_aplikasi' => $request->nama_aplikasi,
            'url_aplikasi' => $request->url_aplikasi,
            'penetration_test_ke' => $request->penetration_test_ke,
            'lampiran' => $lampiranPath,
        ]);

        return redirect()->route('vulnerability-assessment.ticket', ['kodeTiket' => $kodeTiket]);
    }

    public function ticket($kodeTiket)
    {
        $vulnerabilityAssessmentRequest = VulnerabilityAssessmentRequest::where('kode_tiket', $kodeTiket)->firstOrFail();
        return view('vulnerability-assessment.ticket', compact('vulnerabilityAssessmentRequest'));
    }
}
